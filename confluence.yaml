apiVersion: v1
kind: PersistentVolume
metadata:
  name: confluence-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/kubevolumes/confluence_data"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: confluence-statefulset
  labels:
    app: confluence
spec:
  serviceName: confluence-service
  replicas: 1
  selector:
    matchLabels:
      app: confluence
  template:
    metadata:
      labels:
        app: confluence
    spec:
      containers:
      - name: confluence
        image: atlassian/confluence-server
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8090
        - containerPort: 8091
        volumeMounts:
        - mountPath: "/var/atlassian/application-data/confluence"
          name: confluence-pv-claim
      initContainers:
      - name: volume-mount-data-log
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c", "chown -R 2002:2002 /var/atlassian/application-data/confluence"]
        volumeMounts:
        - mountPath: "/var/atlassian/application-data/confluence"
          name: confluence-pv-claim
  volumeClaimTemplates:
  - metadata:
      name: confluence-pv-claim
    spec:
      storageClassName: manual
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: confluence-service
  labels:
    app: confluence-svc
spec:
  ports:
  - port: 8090
    targetPort: 8090
    protocol: TCP
  selector:
    app: confluence
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: confluence-ingress
  annotations:
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
spec:
  rules:
  - host: confluence.example.com
    http:
      paths:
        - path: /
          backend:
            serviceName: confluence-service
            servicePort: 8090
